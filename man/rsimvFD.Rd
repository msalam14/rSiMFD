% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rSiMFD.R
\name{rsimvFD}
\alias{rsimvFD}
\title{This function generates repeated spatially indexed multivariate functional 
where the spatial domain is [0,1]^2. It considers a spacial case of the general
situation described in Alam and Staicu (20xx). Specifically, this functions generates
data where identical spatial index is used for every subject and functions are
sampled at identical points.}
\usage{
rsimvFD(
  n,
  mi,
  spat_indx,
  funARG,
  meanFUN,
  basisFUN,
  zetaVAR,
  corrFUN,
  spatVAR,
  sigma2
)
}
\arguments{
\item{n}{number of subject for which data would be generated}

\item{mi}{is a vector of length n consisting of number of occasions each 
subject would have data}

\item{spat_indx}{is a L by 2 matrix of spatial index}

\item{funARG}{is a numerical vector of functional argument}

\item{meanFUN}{is a  function that returns a p-dimensional mean vector}

\item{basisFUN}{is a list of p functions. Each function provides values of basis vectors.}

\item{zetaVAR}{is a vector of length K and is consist of the variance of zeta.}

\item{corrFUN}{is a surrogate function for a spatial correlation function. 
It takes distance as input and yields value of the correlation.}

\item{spatVAR}{is scalar represents the variance parameter for the spatially indexed scores xi}

\item{sigma2}{is a scalar represents the error variance}
}
\description{
This function generates repeated spatially indexed multivariate functional 
where the spatial domain is [0,1]^2. It considers a spacial case of the general
situation described in Alam and Staicu (20xx). Specifically, this functions generates
data where identical spatial index is used for every subject and functions are
sampled at identical points.
}
\examples{
# Load required package
library(mvtnorm)

# Example parameters
n <- 25
m_i <- rep(4, n)

# Spatial index: 5x5 grid on [0,1]^2
spat_indx <- as.matrix(expand.grid(seq(0, 1, length.out = 5),
                                   seq(0, 1, length.out = 5)))

# Functional argument (time points)
funARG <- seq(0, 1, length.out = 20)

# Mean function: p = 2 dimensional
meanFUN <- function(t) {
  c(sin(2 * pi * t), cos(2 * pi * t))
}

# Basis functions for p = 2
basisFUN <- list(
  function(t) cbind(sin(pi * t), cos(pi * t)),
  function(t) cbind(sin(2 * pi * t), cos(2 * pi * t))
)

# Variance of zeta (2 components)
zetaVAR <- c(1, 0.5)

# Correlation functions for xi
corrFUN <- list(
  function(r) corSpatialVal(r,d=0.3,nugget = 0.15,type = "exponential"),      # exponential correlation
  function(r) corSpatialVal(r,d=0.45,nugget = 0.05,type = "spherical") # slower decay
)

# Spatial variance and noise
spatVAR <- c(1, 0.5)
sigma2 <- 0.1

# Generate data
set.seed(123)
sim_data <- rsimvFD(n, m_i, spat_indx, funARG,
                    meanFUN, basisFUN, zetaVAR,
                    corrFUN, spatVAR, sigma2)

# Check dimensions
str(sim_data)

# Plot first subject, first function
image(sim_data$data[[1]][1:20, ], main = "Example simulated functional data")
}
